scalar Date
scalar JSON

type Query {
  #Users
  users(params: QueryParams): Users!
  user(id: ID!): User
  me: User

  #Themes
  themes(params: QueryParams): Themes!
  theme(id: ID!): Theme

  #Exercise
  exercises(params: QueryParams): Exercises!
  exercise(id: ID!): Exercise

  # UserExercise
  userExercises(params: QueryParams): UserExercises!
  userExercise(id: ID!): UserExercise
}

type Mutation {
  #Users
  createUser(user: UserCreateInput!): User!
  updateUser(id: ID!, user: UserUpdateInput!): User!

  #Themes
  createTheme(theme: ThemeCreateInput!): Theme!
  updateTheme(id: ID!, theme: ThemeUpdateInput!): Theme!

  #Exercise
  createExercise(exercise: ExerciseCreateInput!): Exercise!
  updateExercise(id: ID!, exercise: ExerciseUpdateInput!): Exercise!
  addExerciseToUser(id: ID!, user: ID!): Exercise!

  #Auth
  login(credentials: LoginInput!): AuthPayload
  signup(user: SignupInput!): AuthPayload

  # UserExercise
  createUserExercise(userExercise: UserExerciseCreateInput!): UserExercise!
  updateUserExercise(
    id: ID!
    userExercise: UserExerciseUpdateInput!
  ): UserExercise!
}
